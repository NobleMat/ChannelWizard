//
//  SChannelListViewController.swift
//  Channel7Test
//
//  Created by Noble Mathew on 30/6/17.
//  Copyright (c) 2017 NTech. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol SChannelListViewControllerInput {
  func reloadTableView(channels: [Channel])
}

protocol SChannelListViewControllerOutput {
  func fetchChannelData()
}

class SChannelListViewController: UIViewController, SChannelListViewControllerInput {
  var output: SChannelListViewControllerOutput!
  var router: SChannelListRouter!
  
  @IBOutlet weak var collectionView: UICollectionView!
  var channelCellIdentifier = "channelCellIdentifier"
  var channelArray = [Channel]()
  
  // MARK: - Object lifecycle
  
  override func awakeFromNib() {
    super.awakeFromNib()
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    SChannelListConfigurator.sharedInstance.configure(viewController: self)
    
  }
  
  override func viewWillAppear(_ animated: Bool) {
    super.viewWillAppear(animated)
    ActivityIndicator.showActivityIndicator(self.view)
    self.output.fetchChannelData()
  }
  
  // MARK: - Event handling
  func reloadTableView(channels: [Channel]) {
    channelArray = channels.sorted {
      $0.displayOrder! < $1.displayOrder!
    }
    
    DispatchQueue.main.async {
      self.collectionView.reloadData()
      ActivityIndicator.hideActivityIndicator(self.view)
    }
  }
}

extension SChannelListViewController: UICollectionViewDelegate {
  
}

extension SChannelListViewController: UICollectionViewDataSource {
  func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
    let cell = collectionView.dequeueReusableCell(withReuseIdentifier: channelCellIdentifier, for: indexPath) as! SChenneListCollectionViewCell
    
    cell.channelNameLabel.text = channelArray[indexPath.item].channelName
    
    return cell
  }
  
  func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
    return channelArray.count
  }
  
  func numberOfSections(in collectionView: UICollectionView) -> Int {
     return 1
  }
}
